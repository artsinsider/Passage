import React                  from 'react';import Logo                   from '../../component/Logo';import {Link}                 from "react-router-dom";import {Transition, animated} from 'react-spring/renderprops';import styled,{ withTheme }   from 'styled-components';import './style-publick-page.scss'; class PublickPage extends React.PureComponent {    state = {        activeWisdoms: 0    };    toggle = () => {        const {activeWisdoms} = this.state;        const {wisdoms} = this.props;        const active = wisdoms.length-1 === activeWisdoms ? 0 : activeWisdoms + 1;        this.setState({activeWisdoms: active})    };    render() {        const {activeWisdoms} = this.state;        const {wisdoms} = this.props;        return (            <Publick>                <Header >                    <Label>                        <Link to="/" >                            <Logo/>                            <LogoName>Working Time</LogoName>                        </Link>                    </Label>                    <AuthLinks>                        <Link to={{pathname: "/sign-in", state:{modal: true}}} >Sign in</Link>                        <Link to={{pathname: "/sign-up", state:{modal: true}}} >Sign up</Link>                    </AuthLinks>                </Header>                <PublickBody>                    <Logo/>                    <Transition                        native                        reset                        unique                        items={activeWisdoms}                        from={{ opacity: 0, transform: 'translate3d(100%,0,0)' }}                        enter={{ opacity: 1, transform: 'translate3d(0%,0,0)' }}                        leave={{ opacity: 0, transform: 'translate3d(-50%,0,0)' }}                    >                        {item => props =>                            <animated.div style={props} className="brief-wisdom" onClick={this.toggle}>                                <Quote >{wisdoms[item].quote}</Quote>                                <PersonName>{wisdoms[item].personName}</PersonName>                            </animated.div>                        }                    </Transition>                </PublickBody>            </Publick>        )    }}export default withTheme(PublickPage)const Publick = styled.div`    display: grid;    grid-template-columns: 1fr 1fr 1fr;    grid-template-rows: 50px auto ;    height: 100vh;    font-size:1em;    line-height: 1.5em;    color: #fff;`;const LogoName = styled.span`    position: relative;    margin: 10px;    top: -17px;    letter-spacing: 1px;    font-size: 20px;    color: rgba(214, 214, 255, 0.81) ;    line-height: 36px;`;const Label = styled.span `    svg {        width: 35px;        fill: ${props => props.theme.logoColor};    }`;const Header = styled.header`    grid-column: 1 /5;    background: ${props => props.theme.backgroundGradient};    padding: 0 20px;    border-bottom: 1px solid ${props => props.theme.headerBorderColor};    box-shadow: 0px 11px 16px #0000001c;    z-index: 10;`;const AuthLinks = styled.div`     float: right;     line-height: 2.8em;        a {        margin: 0 10px;        text-decoration: none;        color: rgba(214, 214, 255, 0.81);        transition:color .3s cubic-bezier(.645, .045, .355, 1);    &:hover {            color: #fff;        }    &:last-child {            padding: 4px;            border-radius: 5px;            border: 1px solid rgba(255, 255, 255, .5);        }    }`;const PublickBody = styled.div`    grid-column: 1 /5;    background: linear-gradient(143deg, #432a9a, #262874);    svg {        width: 50em;        height: 42em;        position: absolute;        left: -410px;        opacity: .2;         fill: ${props => props.theme.logoColor};    }    .brief-wisdom{        position: absolute;        left: 30%;        top: 30%;        font-family: 'Oswald', sans-serif;        color: ${props => props.theme.fontColor}    }`;const PersonName = styled.span`    font-size: 1.2em;`;const Quote = styled.p`    max-width: 700px;    min-width: 200px;    letter-spacing: .5px;    font-weight: 400;    font-size: 2em;    line-height: 1.3em;`;