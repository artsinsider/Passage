import React        from 'react';import {Transition} from 'react-spring/renderprops';import styled       from 'styled-components';import {withTheme}  from 'styled-components';import './styles.scss';const Container = styled.div`  display: flex;  justify-content: center;  align-items: center;  height: 100vh;  overflow: hidden;  animation-delay: 1s;  position: absolute;  z-index: 999;  background: rgba(255, 255,255, .55);  top: 0;  left: 0;  border: 0;  right: 0;`;const Round = styled.div`    width: 20px;    height: 20px;    border-radius: 50%;    background-color: ${props => props.theme[`bc_${props.num}`]};    margin: 7px;    display: flex;    justify-content: center;    align-items: center;    &:before {      content: '';      width: 20px;      height: 20px;      border-radius: 50%;      background-color: ${props => props.theme[`bc_${props.num}`]};      opacity: 0.7;      animation: scale 2s infinite cubic-bezier(0, 0, 0.49, 1.02);      animation-delay: 200ms * ${props => props.num};      transition: 0.5s all ease;      transform: scale(1);    }`; function Loader(props) {    const bools = [1,2,3];    return(        <Transition            items={props.show}            from={{ opacity: 0 }}            enter={{ opacity: 1 }}            leave={{ opacity: 0 }}>            {show => show &&(props =>                <Container style={props}>                    {bools.map((n, i) => <Round num={i+1} key={`item-${n}`} className={`item-${n}`} />)}                </Container>)            }        </Transition>    )}export default withTheme(Loader)